<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<article xmlns="http://docbook.org/ns/docbook" xml:id="function.nl-langinfo">
 <table>
  <title>nl_langinfo Constants</title>
  <tgroup cols="2">
   <colspec colname="c1" />
   <colspec colname="c2" />
   <thead>
    <row>
     <entry>Constant</entry>
     <entry>Description</entry>
    </row>
   </thead>
   <tbody>
    <row>
     <entry namest="c1" nameend="c2" align="center"><emphasis>LC_TIME Category Constants</emphasis></entry>
    </row>
    <row>
     <entry>ABDAY_(1-7)</entry>
     <entry>Abbreviated name of n-th day of the week.</entry>
    </row>
    <row>
     <entry>DAY_(1-7)</entry>
     <entry>Name of the n-th day of the week (DAY_1 = Sunday).</entry>
    </row>
    <row>
     <entry>ABMON_(1-12)</entry>
     <entry>Abbreviated name of the n-th month of the year.</entry>
    </row>
    <row>
     <entry>MON_(1-12)</entry>
     <entry>Name of the n-th month of the year.</entry>
    </row>
    <row>
     <entry>AM_STR</entry>
     <entry>String for Ante meridian.</entry>
    </row>
    <row>
     <entry>PM_STR</entry>
     <entry>String for Post meridian.</entry>
    </row>
    <row>
     <entry>D_T_FMT</entry>
     <entry>String that can be used as the format string for <function>strftime</function> to represent time and date.</entry>
    </row>
    <row>
     <entry>D_FMT</entry>
     <entry>String that can be used as the format string for <function>strftime</function> to represent date.</entry>
    </row>
    <row>
     <entry>T_FMT</entry>
     <entry>String that can be used as the format string for <function>strftime</function> to represent time.</entry>
    </row>
    <row>
     <entry>T_FMT_AMPM</entry>
     <entry>String that can be used as the format string for <function>strftime</function> to represent time in 12-hour format with ante/post meridian.</entry>
    </row>
    <row>
     <entry>ERA</entry>
     <entry>Alternate era.</entry>
    </row>
    <row>
     <entry>ERA_YEAR</entry>
     <entry>Year in alternate era format.</entry>
    </row>
    <row>
     <entry>ERA_D_T_FMT</entry>
     <entry>Date and time in alternate era format (string can be used in <function>strftime</function>).</entry>
    </row>
    <row>
     <entry>ERA_D_FMT</entry>
     <entry>Date in alternate era format (string can be used in <function>strftime</function>).</entry>
    </row>
    <row>
     <entry>ERA_T_FMT</entry>
     <entry>Time in alternate era format (string can be used in <function>strftime</function>).</entry>
    </row>
    <row>
     <entry namest="c1" nameend="c2" align="center"><emphasis>LC_MONETARY Category Constants</emphasis></entry>
    </row>
    <row>
     <entry>INT_CURR_SYMBOL</entry>
     <entry>International currency symbol.</entry>
    </row>
    <row>
     <entry>CURRENCY_SYMBOL</entry>
     <entry>Local currency symbol.</entry>
    </row>
    <row>
     <entry>CRNCYSTR</entry>
     <entry>Same value as CURRENCY_SYMBOL.</entry>
    </row>
    <row>
     <entry>MON_DECIMAL_POINT</entry>
     <entry>Decimal point character.</entry>
    </row>
    <row>
     <entry>MON_THOUSANDS_SEP</entry>
     <entry>Thousands separator (groups of three digits).</entry>
    </row>
    <row>
     <entry>MON_GROUPING</entry>
     <entry>Like 'grouping' element.</entry>
    </row>
    <row>
     <entry>POSITIVE_SIGN</entry>
     <entry>Sign for positive values.</entry>
    </row>
    <row>
     <entry>NEGATIVE_SIGN</entry>
     <entry>Sign for negative values.</entry>
    </row>
    <row>
     <entry>INT_FRAC_DIGITS</entry>
     <entry>International fractional digits.</entry>
    </row>
    <row>
     <entry>FRAC_DIGITS</entry>
     <entry>Local fractional digits.</entry>
    </row>
    <row>
     <entry>P_CS_PRECEDES</entry>
     <entry>Returns 1 if CURRENCY_SYMBOL precedes a positive value.</entry>
    </row>
    <row>
     <entry>P_SEP_BY_SPACE</entry>
     <entry>Returns 1 if a space separates CURRENCY_SYMBOL from a positive value.</entry>
    </row>
    <row>
     <entry>N_CS_PRECEDES</entry>
     <entry>Returns 1 if CURRENCY_SYMBOL precedes a negative value.</entry>
    </row>
    <row>
     <entry>N_SEP_BY_SPACE</entry>
     <entry>Returns 1 if a space separates CURRENCY_SYMBOL from a negative value.</entry>
    </row>
    <row>
     <entry>P_SIGN_POSN</entry>
     <entry morerows="1" valign="middle">
      <itemizedlist>
       <listitem>
        <simpara>
          Returns 0 if parentheses surround the quantity and currency_symbol.
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Returns 1 if the sign string precedes the quantity and currency_symbol.
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Returns 2 if the sign string follows the quantity and currency_symbol.
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Returns 3 if the sign string immediately precedes the currency_symbol.
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Returns 4 if the sign string immediately follows the currency_symbol.
        </simpara>
       </listitem>
      </itemizedlist>
     </entry>
    </row>
    <row>
     <entry>N_SIGN_POSN</entry>
    </row>
    <row>
     <entry namest="c1" nameend="c2" align="center"><emphasis>LC_NUMERIC Category Constants</emphasis></entry>
    </row>
    <row>
     <entry>DECIMAL_POINT</entry>
     <entry>Decimal point character.</entry>
    </row>
    <row>
     <entry>RADIXCHAR</entry>
     <entry>Same value as DECIMAL_POINT.</entry>
    </row>
    <row>
     <entry>THOUSANDS_SEP</entry>
     <entry>Separator character for thousands (groups of three digits).</entry>
    </row>
    <row>
     <entry>THOUSEP</entry>
     <entry>Same value as THOUSANDS_SEP.</entry>
    </row>
    <row>
     <entry>GROUPING</entry>
     <entry></entry>
    </row>
    <row>
     <entry namest="c1" nameend="c2" align="center"><emphasis>LC_MESSAGES Category Constants</emphasis></entry>
    </row>
    <row>
     <entry>YESEXPR</entry>
     <entry>Regex string for matching 'yes' input.</entry>
    </row>
    <row>
     <entry>NOEXPR</entry>
     <entry>Regex string for matching 'no' input.</entry>
    </row>
    <row>
     <entry>YESSTR</entry>
     <entry>Output string for 'yes'.</entry>
    </row>
    <row>
     <entry>NOSTR</entry>
     <entry>Output string for 'no'.</entry>
    </row>
    <row>
     <entry namest="c1" nameend="c2" align="center"><emphasis>LC_CTYPE Category Constants</emphasis></entry>
    </row>
    <row>
     <entry>CODESET</entry>
     <entry>Return a string with the name of the character encoding.</entry>
    </row>
   </tbody>
  </tgroup>
 </table>
</article>

